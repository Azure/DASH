# https://hub.docker.com/r/p4lang/pi/tags
# use for libraries missing from behavioral-model

# NOTE: ":stable" has "experimental" P4RT funcs, latest has non-experimental
# https://hub.docker.com/r/p4lang/pi
FROM p4lang/pi:latest as p4pi

# https://hub.docker.com/r/p4lang/behavioral-model
FROM p4lang/behavioral-model:latest
LABEL maintainer="SONIC-DASH Community"
LABEL description="DASH pipeline P4 Behavioral Model build toolchain"

# Configure make to run as many parallel jobs as cores available
ARG available_processors
ARG MAKEFLAGS=-j$available_processors


# Select the compiler to use.
# We install the default version of GCC (GCC 9), as well as clang 8 and clang 10.
ARG sswitch_grpc=yes
ARG CC=gcc
ARG CXX=g++
ENV TZ=America/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ENV GIT_SSL_NO_VERIFY=true

ENV PI_DEPS automake \
            build-essential \
            g++ \
            libboost-dev \
            libboost-system-dev \
            libboost-thread-dev \
            libtool \
            libtool-bin \
            pkg-config \
            make

            # clang-8 \
            # clang-10 \
            # clang-format-8 \
            # cmake \
            # libreadline-dev \
            # libpcap-dev \
            # libmicrohttpd-dev \
            # doxygen \
            # valgrind \
            #     vim \
            #     git-core \
            #     python3 \
            #     python3-pip


ENV PI_RUNTIME_DEPS libboost-system1.71.0 \
                    libboost-thread1.71.0 \
                    libpcap0.8 \
                    python3 \
                    python-is-python3


ENV LD_LIBRARY_PATH=/usr/local/lib


ENV BM_RUNTIME_DEPS libboost-program-options1.71.0 \
                    libboost-system1.71.0 \
                    libboost-filesystem1.71.0 \
                    libboost-thread1.71.0 \
                    libgmp10 \
                    libpcap0.8 \
                    python3 \
                    python-is-python3 \
                    sudo


#ENV DEPS $PI_DEPS $PI_RUNTIME_DEPS $BM_DEPS $BM_RUNTIME_DEPS
ENV DEPS $PI_DEPS 

WORKDIR /

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    $DEPS
    
    #  && \
    #   apt-get purge -qq $DEPS && \
    #   apt-get autoremove --purge -qq && \
    #   rm -rf /var/cache/apt/* /var/lib/apt/lists/* 

WORKDIR /usr/local/lib/

# Copy libabsl .a files from p4pi, make shared lib for our use and delete .a's
COPY --from=p4pi /usr/local/lib/libabsl_*.a ./
#RUN g++ -Wl,--whole-archive /usr/local/lib/libabsl_*.a -Wl,--no-whole-archive
RUN g++ -shared /usr/local/lib/libabsl_*.a -o libabsl.so && \
    rm libabsl_*.a


WORKDIR /

ARG user
ARG uid
ARG guid
ARG hostname

ENV BUILD_HOSTNAME $hostname
ENV USER $user

RUN groupadd -f -r -g $guid g$user

RUN useradd $user -l -u $uid -g $guid -d /var/$user -m -s /bin/bash

RUN echo "$user ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers

USER $user
